services:
  php:
    container_name: app_php
    build:
      context: .
      dockerfile: ./Dockerfile
    volumes:
      - ./src:/var/www/html:cached
      - app_vendor_store:/var/www/html/vendor
    ports:
      - 9000:9000
    depends_on:
      db:
        condition: service_healthy
    restart: on-failure
    networks:
      - internal_network
      - external_network
  node:
    container_name: app_node
    build:
      context: .
      dockerfile: ./Dockerfile.node
    volumes:
      - ./src:/var/www/html:cached
      - app_node_modules_store:/var/www/html/node_modules
    restart: on-failure
    platform: linux/amd64
    tty: true
    networks:
      - internal_network
      - external_network
  nginx:
    container_name: app_nginx
    image: nginx:alpine
    volumes:
      - ./src:/var/www/html:cached
      - ./etc/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 2525:80
    depends_on:
      - php
      - node
    restart: on-failure
    platform: linux/amd64
    networks:
      - internal_network
      - external_network
  db:
    image: mysql:8.0
    container_name: app_db
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "true"
      TZ: 'Asia/Tokyo'
    volumes:
      - app_db_store:/var/lib/mysql
      - ./etc/mysql/init.d/createdb.sql:/docker-entrypoint-initdb.d/createdb.sql
      - ./etc/mysql/conf.d/my.local.cnf:/etc/mysql/conf.d/my.local.cnf
    ports:
      - 3306:3306
    platform: linux/amd64
    networks:
      - internal_network
      - external_network
    healthcheck:
      test: [ "CMD", "mysql","-h", "localhost", "-u", "root", "-e", "quit" ]
      interval: 5s
      timeout: 5s
      retries: 10

volumes:
  app_db_store:
    driver: local
  app_vendor_store:
    driver: local
  app_node_modules_store:
    driver: local

networks:
  external_network:
  internal_network:
    internal: true
